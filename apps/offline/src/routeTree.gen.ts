/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as ArchivedImport } from './routes/archived'
import { Route as AddImport } from './routes/add'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as HabitHabitIdImport } from './routes/habit/$habitId'
import { Route as EditHabitIdImport } from './routes/edit/$habitId'

// Create/Update Routes

const TestRoute = TestImport.update({
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const ArchivedRoute = ArchivedImport.update({
  path: '/archived',
  getParentRoute: () => rootRoute,
} as any)

const AddRoute = AddImport.update({
  path: '/add',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const HabitHabitIdRoute = HabitHabitIdImport.update({
  path: '/habit/$habitId',
  getParentRoute: () => rootRoute,
} as any)

const EditHabitIdRoute = EditHabitIdImport.update({
  path: '/edit/$habitId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/add': {
      id: '/add'
      path: '/add'
      fullPath: '/add'
      preLoaderRoute: typeof AddImport
      parentRoute: typeof rootRoute
    }
    '/archived': {
      id: '/archived'
      path: '/archived'
      fullPath: '/archived'
      preLoaderRoute: typeof ArchivedImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/edit/$habitId': {
      id: '/edit/$habitId'
      path: '/edit/$habitId'
      fullPath: '/edit/$habitId'
      preLoaderRoute: typeof EditHabitIdImport
      parentRoute: typeof rootRoute
    }
    '/habit/$habitId': {
      id: '/habit/$habitId'
      path: '/habit/$habitId'
      fullPath: '/habit/$habitId'
      preLoaderRoute: typeof HabitHabitIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/add': typeof AddRoute
  '/archived': typeof ArchivedRoute
  '/test': typeof TestRoute
  '/edit/$habitId': typeof EditHabitIdRoute
  '/habit/$habitId': typeof HabitHabitIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/add': typeof AddRoute
  '/archived': typeof ArchivedRoute
  '/test': typeof TestRoute
  '/edit/$habitId': typeof EditHabitIdRoute
  '/habit/$habitId': typeof HabitHabitIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/add': typeof AddRoute
  '/archived': typeof ArchivedRoute
  '/test': typeof TestRoute
  '/edit/$habitId': typeof EditHabitIdRoute
  '/habit/$habitId': typeof HabitHabitIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/add'
    | '/archived'
    | '/test'
    | '/edit/$habitId'
    | '/habit/$habitId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/add'
    | '/archived'
    | '/test'
    | '/edit/$habitId'
    | '/habit/$habitId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/add'
    | '/archived'
    | '/test'
    | '/edit/$habitId'
    | '/habit/$habitId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AddRoute: typeof AddRoute
  ArchivedRoute: typeof ArchivedRoute
  TestRoute: typeof TestRoute
  EditHabitIdRoute: typeof EditHabitIdRoute
  HabitHabitIdRoute: typeof HabitHabitIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AddRoute: AddRoute,
  ArchivedRoute: ArchivedRoute,
  TestRoute: TestRoute,
  EditHabitIdRoute: EditHabitIdRoute,
  HabitHabitIdRoute: HabitHabitIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/add",
        "/archived",
        "/test",
        "/edit/$habitId",
        "/habit/$habitId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/add": {
      "filePath": "add.tsx"
    },
    "/archived": {
      "filePath": "archived.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/edit/$habitId": {
      "filePath": "edit/$habitId.tsx"
    },
    "/habit/$habitId": {
      "filePath": "habit/$habitId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
